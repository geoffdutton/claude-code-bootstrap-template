name: ü§ñ Claude Code Repository Agent

on:
  # Respond to @claude mentions in issues and PRs
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

  # Automatically handle new issues and PRs
  issues:
    types: [opened, assigned, labeled]
  pull_request:
    types: [opened, reopened]

  # Scheduled maintenance tasks
  schedule:
    - cron: '0 9 * * 1' # Every Monday at 9 AM UTC

  # Manual trigger for admin tasks
  workflow_dispatch:
    inputs:
      task:
        description: 'Task for Claude to perform'
        required: true
        default: 'Review and improve the template'
        type: choice
        options:
          - 'Review and improve the template'
          - 'Update documentation'
          - 'Fix bugs and issues'
          - 'Add new features'
          - 'Security audit'
          - 'Performance optimization'

jobs:
  # Main Claude agent job
  claude-agent:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write
      checks: write

    steps:
      - name: üîç Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üéØ Set Dynamic Prompt
        id: set-prompt
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" && "${{ contains(github.event.comment.body, '@claude') }}" == "true" ]]; then
            # User mentioned @claude in a comment
            echo "prompt=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issues" && "${{ github.event.action }}" == "opened" ]]; then
            # New issue opened - analyze and triage
            echo "prompt=New issue opened: \"${{ github.event.issue.title }}\". Please analyze this issue for the Claude Bootstrap Template repository and provide appropriate labels, categorization, and initial response. If it's a bug report, investigate. If it's a feature request, provide implementation guidance. If it's a support question, provide helpful answers with examples." >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # New PR opened - review it
            echo "prompt=A new pull request has been opened for the Claude Bootstrap Template. Please review the changes for: 1) Code quality and best practices 2) Template functionality 3) Documentation accuracy 4) Potential breaking changes 5) Security considerations. Provide constructive feedback and suggestions." >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "schedule" ]]; then
            # Weekly maintenance
            echo "prompt=Perform weekly maintenance on the Claude Bootstrap Template repository: 1) Check for dependency updates 2) Review open issues and PRs 3) Update documentation if needed 4) Test template functionality 5) Look for potential improvements 6) Check for security vulnerabilities" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Manual trigger with custom task
            echo "prompt=${{ inputs.task }}" >> $GITHUB_OUTPUT
          else
            # Default maintenance task
            echo "prompt=General repository maintenance and support" >> $GITHUB_OUTPUT
          fi

      - name: ü§ñ Claude Code Agent
        uses: anthropics/claude-code-action@v1
        with:
          prompt: ${{ steps.set-prompt.outputs.prompt }}
            View
            GlobTool
            GrepTool
            BatchTool
            mcp__github__create_pull_request
            mcp__github__create_issue_comment
            mcp__github__add_labels_to_issue
            mcp__github__create_review_comment

          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

  # Specialized jobs for different automation patterns
  template-testing:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'schedule' || 
      (github.event_name == 'workflow_dispatch' && contains(inputs.task, 'test'))
    permissions:
      contents: read
      issues: write

    steps:
      - name: üîç Checkout repository
        uses: actions/checkout@v4

      - name: üß™ Test Template Functionality
        uses: anthropics/claude-code-action@v1
        with:
          prompt: |
            Test the Claude Bootstrap Template functionality:

            1. **Validate Workflow File**: Check `.github/workflows/bootstrap-app.yml` for:
               - Syntax correctness
               - Latest action versions
               - Security best practices
               - Error handling completeness
               
            2. **Test Example Prompts**: Review `prompt.example.md` and validate:
               - Example prompts are clear and comprehensive
               - They would generate working applications
               - Cover different use cases (web apps, APIs, workers)
               
            3. **Check Documentation**: Verify `README.md`:
               - Instructions are accurate and up-to-date
               - Links work correctly
               - Examples are current
               
            4. **Dependency Analysis**: Check for:
               - Outdated GitHub Actions
               - Security vulnerabilities
               - Potential improvements
               
            Create an issue with findings if problems are detected, or comment that all tests passed.

          allowed_tools: |
            Bash(git:*,curl:*,node:*,npm:*)
            View
            GlobTool  
            GrepTool
            mcp__github__create_issue
            mcp__github__create_issue_comment

          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

  community-engagement:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issues' ||
      github.event_name == 'pull_request' ||
      contains(github.event.comment.body, 'help') ||
      contains(github.event.comment.body, 'support')
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
      - name: üîç Checkout repository
        uses: actions/checkout@v4

      - name: üë• Community Support Agent
        uses: anthropics/claude-code-action@v1
        with:
          prompt: |
            You are a community support specialist for the Claude Bootstrap Template.

            **Current Event**: ${{ github.event_name }}
            **Event Details**: 
            ${{ github.event_name == 'issues' && format('New issue: {0} - {1}', github.event.issue.title, github.event.issue.body) }}
            ${{ github.event_name == 'pull_request' && format('New PR: {0} - {1}', github.event.pull_request.title, github.event.pull_request.body) }}
            ${{ github.event_name == 'issue_comment' && format('Comment on issue: {0}', github.event.comment.body) }}

            **Your Tasks**:
            1. **Issue Categorization**: Add appropriate labels:
               - `question` - User needs help
               - `bug` - Something is broken  
               - `enhancement` - Feature request
               - `template-improvement` - Template itself needs work
               - `documentation` - Docs need updating
               - `good first issue` - Easy for contributors
               
            2. **Provide Support**: 
               - Answer questions with examples
               - Guide users to correct documentation
               - Suggest workarounds for issues
               - Explain template functionality
               
            3. **Escalate When Needed**:
               - Create detailed bug reports
               - Suggest enhancements with implementation notes
               - Flag security concerns
               
            Be welcoming, helpful, and professional. Always try to solve the user's problem.

          allowed_tools: |
            View
            GlobTool
            GrepTool  
            mcp__github__add_labels_to_issue
            mcp__github__create_issue_comment
            mcp__github__create_review_comment

          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

  security-audit:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && contains(inputs.task, 'security'))
    permissions:
      contents: write
      issues: write
      pull-requests: write
      security-events: write

    steps:
      - name: üîç Checkout repository
        uses: actions/checkout@v4

      - name: üîí Security Audit Agent
        uses: anthropics/claude-code-action@v1
        with:
          prompt: |
            Perform a comprehensive security audit of the Claude Bootstrap Template:

            **Audit Areas:**

            1. **GitHub Actions Security**:
               - Check for hardcoded secrets or credentials
               - Validate permission scopes are minimal
               - Review third-party action versions
               - Check for potential injection vulnerabilities
               - Verify secure secret handling
               
            2. **Bootstrap Workflow Security**:
               - Analyze `.github/workflows/bootstrap-app.yml`
               - Check for secure Claude Code configuration
               - Validate input sanitization
               - Review timeout and resource limits
               
            3. **Template Configuration**:
               - Check for insecure defaults
               - Validate environment variable handling
               - Review generated code security patterns
               
            4. **Dependencies & Actions**:
               - Check for known vulnerable actions
               - Suggest updates to latest secure versions
               - Review pinning strategy
               
            **Deliverables**:
            - Create security issues for any findings
            - Suggest fixes with PRs where appropriate  
            - Update documentation with security guidance
            - Generate security recommendations

          allowed_tools: |
            Bash(git:*,curl:*,gh:*)
            View
            GlobTool
            GrepTool
            BatchTool
            mcp__github__create_issue
            mcp__github__create_pull_request

          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
